/*
 * Nimbits API
 * Nimbits Server Provides deep automation via a REST API
 *
 * OpenAPI spec version: 5.0
 * Contact: support@nimbits.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.nimbits.io;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.nimbits.io.ChartDataColumn;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Row
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-09-01T12:54:28.644-04:00")
public class Row {
  @SerializedName("c")
  private List<ChartDataColumn> c = null;

  public Row c(List<ChartDataColumn> c) {
    this.c = c;
    return this;
  }

  public Row addCItem(ChartDataColumn cItem) {
    if (this.c == null) {
      this.c = new ArrayList<ChartDataColumn>();
    }
    this.c.add(cItem);
    return this;
  }

   /**
   * Get c
   * @return c
  **/
  @ApiModelProperty(value = "")
  public List<ChartDataColumn> getC() {
    return c;
  }

  public void setC(List<ChartDataColumn> c) {
    this.c = c;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Row row = (Row) o;
    return Objects.equals(this.c, row.c);
  }

  @Override
  public int hashCode() {
    return Objects.hash(c);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Row {\n");
    
    sb.append("    c: ").append(toIndentedString(c)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

