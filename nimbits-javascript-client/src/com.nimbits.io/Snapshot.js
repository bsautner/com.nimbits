/**
 * Nimbits API
 * Nimbits Server Provides deep automation via a REST API
 *
 * OpenAPI spec version: 5.0
 * Contact: support@nimbits.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


import ApiClient from '../ApiClient';





/**
* The Snapshot model module.
* @module com.nimbits.io/Snapshot
* @version 5.0
*/
export default class Snapshot {
    /**
    * Constructs a new <code>Snapshot</code>.
    * @alias module:com.nimbits.io/Snapshot
    * @class
    */

    constructor() {
        

        
        

        

        
    }

    /**
    * Constructs a <code>Snapshot</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:com.nimbits.io/Snapshot} obj Optional instance to populate.
    * @return {module:com.nimbits.io/Snapshot} The populated <code>Snapshot</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Snapshot();

            
            
            

            if (data.hasOwnProperty('attributes')) {
                obj['attributes'] = ApiClient.convertToType(data['attributes'], {'String': 'String'});
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('timestamp')) {
                obj['timestamp'] = ApiClient.convertToType(data['timestamp'], 'Number');
            }
        }
        return obj;
    }

    /**
    * @member {Object.<String, String>} attributes
    */
    attributes = undefined;
    /**
    * @member {String} id
    */
    id = undefined;
    /**
    * @member {Number} timestamp
    */
    timestamp = undefined;








}


