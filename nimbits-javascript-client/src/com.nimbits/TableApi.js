/**
 * Nimbits API
 * Nimbits Server Provides deep automation via a REST API
 *
 * OpenAPI spec version: 5.0
 * Contact: support@nimbits.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ChartDTO from '../com.nimbits.io/ChartDTO';

/**
* Table service.
* @module com.nimbits/TableApi
* @version 5.0
*/
export default class TableApi {

    /**
    * Constructs a new TableApi. 
    * @alias module:com.nimbits/TableApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getDataTable operation.
     * @callback module:com.nimbits/TableApi~getDataTableCallback
     * @param {String} error Error message, if any.
     * @param {module:com.nimbits.io/ChartDTO} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * GetDataTable
     * Get A Data Table For a Topic
     * @param {String} xApiKey x-api-key
     * @param {String} id id
     * @param {Object} opts Optional parameters
     * @param {String} opts.start start
     * @param {String} opts.end end
     * @param {String} opts.count count
     * @param {String} opts.mask mask
     * @param {module:com.nimbits/TableApi~getDataTableCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:com.nimbits.io/ChartDTO}
     */
    getDataTable(xApiKey, id, opts, callback) {
      opts = opts || {};
      let postBody = null;

      // verify the required parameter 'xApiKey' is set
      if (xApiKey === undefined || xApiKey === null) {
        throw new Error("Missing the required parameter 'xApiKey' when calling getDataTable");
      }

      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling getDataTable");
      }


      let pathParams = {
        'id': id
      };
      let queryParams = {
        'start': opts['start'],
        'end': opts['end'],
        'count': opts['count'],
        'mask': opts['mask']
      };
      let headerParams = {
        'x-api-key': xApiKey
      };
      let formParams = {
      };

      let authNames = ['x-api-key'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ChartDTO;

      return this.apiClient.callApi(
        '/v5_0/api/table/topic/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }


}
