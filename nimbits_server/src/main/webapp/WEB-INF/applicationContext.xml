<?xml version="1.0" encoding="UTF-8"?>


<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd">



    <!-- Entry Points-->
    <bean id="valueTask" class="com.nimbits.server.process.task.ValueTask"/>

    <bean id="defragmenter" class="com.nimbits.server.defrag.Defragmenter"/>

    <bean id="dataProcessor" class="com.nimbits.server.data.DataProcessor"/>

    <bean id="chartHelper" class="com.nimbits.server.chart.ChartHelper">



    </bean>

    <bean id="nimbitsCache" class="com.nimbits.server.transaction.cache.NimbitsCacheImpl"/>

    <bean id="userService" class="com.nimbits.server.transaction.user.service.UserServiceImpl">

        <constructor-arg ref="userDao"/>
        <constructor-arg ref="settingsService"/>
        <constructor-arg ref="authService"/>
        <constructor-arg ref="entityDao"/>
    </bean>

    <bean id="entityService" class="com.nimbits.server.transaction.entity.EntityServiceImpl">


        <constructor-arg index="0" ref="emailService"/>
        <constructor-arg index="1" ref="connectedClients"/>
        <constructor-arg index="2" ref="entityDao"/>
        <constructor-arg index="3" ref="storageIO"/>
    </bean>

    <bean id="authService" class="com.nimbits.server.auth.AuthServiceImpl">
        <constructor-arg ref="settingsService"/>
        <constructor-arg ref="userDao"/>


    </bean>

    <bean id="settingsService" class="com.nimbits.server.transaction.settings.SettingsServiceImpl">


        <constructor-arg index="0" ref="settingsDao"/>
        <constructor-arg index="1" ref="stringEncryption"/>
    </bean>


    <bean id="settingsDao" class="com.nimbits.server.transaction.settings.SettingsDaoImpl">

        <property name="persistenceManagerFactory" ref="pmf"/>
    </bean>
    <bean id="emailService" class="com.nimbits.server.communication.mail.EmailServiceImpl">
        <constructor-arg index="0" ref="settingsService"/>
        <constructor-arg index="1" ref="authService"/>
        <constructor-arg index="2" ref="serverInfo"/>
    </bean>

    <bean id="blobStore" class="com.nimbits.server.process.BlobStoreImpl" >
        <constructor-arg index="0" ref="nimbitsCache"/>
        <constructor-arg index="1" ref="storageIO"/>
        <constructor-arg index="2" ref="defragmenter"/>
        <constructor-arg index="3" ref="settingsService"/>
    </bean>



    <bean id="storageIO" class="com.nimbits.server.process.StorageIOImpl">

        <constructor-arg index="0" ref="blobStore"/>
        <constructor-arg index="1" ref="nimbitsCache"/>
    </bean>
    <bean id="entityDao" class="com.nimbits.server.transaction.entity.dao.EntityDaoImpl">
        <constructor-arg ref="recursionValidation"/>
        <property name="persistenceManagerFactory" ref="pmf"/>
    </bean>

    <bean id="userDao" class="com.nimbits.server.transaction.user.dao.UserDaoImpl">
        <property name="persistenceManagerFactory" ref="pmf"/>
    </bean>




    <bean id="recursionValidation" class="com.nimbits.server.orm.validation.RecursionValidation">

    </bean>
    <bean id="valueService" class="com.nimbits.server.transaction.value.service.ValueServiceImpl">


        <constructor-arg index="0" ref="chartHelper"/>
        <constructor-arg index="1" ref="defragmenter"/>
    </bean>


    <bean id="calculationService" class="com.nimbits.server.transaction.calculation.CalculationServiceImpl">


    </bean>


    <bean id="summaryService" class="com.nimbits.server.transaction.summary.SummaryServiceImpl">


        <constructor-arg ref="taskService"/>
    </bean>
    <bean id="syncService" class="com.nimbits.server.transaction.sync.SyncServiceImpl">

    </bean>
    <bean id="subscriptionService" class="com.nimbits.server.transaction.subscription.SubscriptionServiceImpl">


        <constructor-arg index="0" ref="GeoSpatialDao"/>
        <constructor-arg index="1" ref="emailService"/>
        <constructor-arg index="2" ref="valueTask"/>
        <constructor-arg index="3" ref="xmppService"/>
        <constructor-arg index="4" ref="connectedClients"/>
        <constructor-arg index="5" ref="nimbitsCache"/>
        <constructor-arg index="6" ref="entityService"/>
        <constructor-arg index="7" ref="settingsService"/>
    </bean>


    <bean id="connectedClients" class="com.nimbits.server.socket.ConnectedClients">


    </bean>
    <bean id="xmppService" class="com.nimbits.server.communication.xmpp.XmppServiceImpl"/>

    <bean id="taskService" name="taskService" class="com.nimbits.server.process.task.TaskServiceImpl">


    </bean>


    <!--REST API -->
    <bean id="getAction" name="getAction" class="com.nimbits.server.api.v3.actions.get.GetAction">

        <constructor-arg index="0" ref="entityDao"/>
        <constructor-arg index="1" ref="entityService"/>
        <constructor-arg index="2" ref="valueService"/>
        <constructor-arg index="3" ref="userService"/>
        <constructor-arg index="4" ref="storageIO"/>
        <constructor-arg index="5" ref="GeoSpatialDao"/>
        <constructor-arg index="6" ref="userDao"/>
    </bean>

    <bean id="postAction" name="postAction" class="com.nimbits.server.api.v3.actions.post.PostAction">

        <constructor-arg index="0" ref="GeoSpatialDao"/>
        <constructor-arg index="1" ref="entityService"/>
        <constructor-arg index="2" ref="valueService"/>
        <constructor-arg index="3" ref="userService"/>
        <constructor-arg index="4" ref="entityDao"/>
        <constructor-arg index="5" ref="taskService"/>
        <constructor-arg index="6" ref="valueTask"/>
        <constructor-arg index="7" ref="storageIO"/>
        <constructor-arg index="8" ref="summaryService"/>
        <constructor-arg index="9" ref="syncService"/>
        <constructor-arg index="10" ref="subscriptionService"/>
        <constructor-arg index="11" ref="calculationService"/>
        <constructor-arg index="12" ref="dataProcessor"/>
        <constructor-arg index="13" ref="userDao"/>
    </bean>

    <bean id="deleteAction" name="deleteAction" class="com.nimbits.server.api.v3.actions.delete.DeleteAction">
        <constructor-arg index="0" ref="entityService"/>
        <constructor-arg index="1" ref="valueService"/>
        <constructor-arg index="2" ref="userService"/>
        <constructor-arg index="3" ref="entityDao"/>
    </bean>

    <bean id="putAction" name="putAction" class="com.nimbits.server.api.v3.actions.put.PutAction">

        <constructor-arg index="0" ref="entityService"/>
        <constructor-arg index="1" ref="valueService"/>
        <constructor-arg index="2" ref="userService"/>
        <constructor-arg index="3" ref="entityDao"/>
    </bean>



    <bean id="systemCron" name="systemCron" class="com.nimbits.server.process.cron.SystemCron"/>


    <bean id="stringEncryption" class="com.nimbits.server.secure.StringEncryption"/>
    <bean id="serverInfo" class="com.nimbits.server.system.ServerInfo"/>

    <bean id="pmf" class="org.springframework.orm.jdo.LocalPersistenceManagerFactoryBean">
        <property name="jdoProperties">
            <props>
                <prop key="javax.jdo.PersistenceManagerFactoryClass">
                    org.datanucleus.api.jdo.JDOPersistenceManagerFactory
                </prop>
                <prop key="javax.jdo.option.ConnectionURL">
                    jdbc:h2:./database/db2;MV_STORE=FALSE;MVCC=FALSE;;FILE_LOCK=NO
                </prop>
                <prop key="javax.jdo.option.ConnectionUserName">sa</prop>
                <prop key="javax.jdo.option.ConnectionPassword"></prop>
                <prop key="javax.jdo.option.ConnectionDriverName">org.h2.Driver</prop>
                <prop key="org.jpox.autoCreateSchema">true</prop>
                <!--<prop key="datanucleus.schema.autoCreateAll">true</prop>-->
                <prop key="org.jpox.identifier.case">PreserveCase</prop>
                <prop key="datanucleus.autoCreateTables">true</prop>
                <prop key="datanucleus.autoCreateColumns">true</prop>
                <!--<prop key="datanucleus.schema.autoCreateColumns">true</prop>-->
            </props>
        </property>
    </bean>


    <bean id="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
        <property name="corePoolSize" value="5" />
        <property name="maxPoolSize" value="10" />
        <property name="queueCapacity" value="25" />
    </bean>

    <bean id="systemTaskExecutor" class="com.nimbits.server.process.cron.SystemTaskExecutor">


        <constructor-arg index="0" ref="GeoSpatialDao"/>
        <constructor-arg index="1" ref="taskExecutor"/>
        <constructor-arg index="2" ref="systemCron"/>
        <constructor-arg index="3" ref="entityDao"/>
        <constructor-arg index="4" ref="userService"/>
        <constructor-arg index="5" ref="entityService"/>
        <constructor-arg index="6" ref="authService"/>
        <constructor-arg index="7" ref="valueService"/>
        <constructor-arg index="8" ref="taskService"/>
        <constructor-arg index="9" ref="subscriptionService"/>
        <constructor-arg index="10" ref="calculationService"/>
        <constructor-arg index="11" ref="valueTask"/>
        <constructor-arg index="12" ref="storageIO"/>
        <constructor-arg index="13" ref="summaryService"/>
        <constructor-arg index="14" ref="syncService"/>
        <constructor-arg index="15" ref="dataProcessor"/>
    </bean>

    <bean id="GeoSpatialDao" name="GeoSpatialDao" class="com.nimbits.server.geo.GeoSpatialDaoImpl">

        <constructor-arg ref="entityDao"/>
    </bean>

    <task:scheduled-tasks scheduler="myScheduler">
        <task:scheduled ref="systemTaskExecutor" method="heartbeat" fixed-delay="5000"/>
    </task:scheduled-tasks>

    <task:scheduler id="myScheduler" pool-size="10"/>


</beans>